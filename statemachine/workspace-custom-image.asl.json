{
  "Comment": "State machine to automate the creation of Amazon WorkSpaces images and bundles.",
  "StartAt": "Workspaces Builder Setup",
  "States": {
    "Workspaces Builder Setup": {
      "Type": "Task",
      "Resource": "${WorkspaceBuilderSetupFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ]
        }
      ],
      "Next": "Get Workspaces Builder State"
    },
    "Get Workspaces Builder State": {
      "Type": "Task",
      "Parameters": {
        "WorkspaceIds.$": "States.Array($.AutomationParameters.ImageBuilderWorkSpaceId)"
      },
      "Resource": "arn:aws:states:::aws-sdk:workspaces:describeWorkspaces",
      "ResultPath": "$.ImageBuilderStatus",
      "Next": "Is Workspaces Builder Available?"
    },
    "Is Workspaces Builder Available?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ImageBuilderStatus.Workspaces[0].State",
          "StringEquals": "AVAILABLE",
          "Next": "Attach Security Group to Workspaces Builder",
          "Comment": "AVAILABLE"
        },
        {
          "Variable": "$.ImageBuilderStatus.Workspaces[0].State",
          "StringEquals": "ERROR",
          "Next": "Failed to Create Builder Workspace",
          "Comment": "ERROR"
        }
      ],
      "Default": "Wait 3 Min"
    },
    "Failed to Create Builder Workspace": {
      "Type": "Fail"
    },
    "Attach Security Group to Workspaces Builder": {
      "Type": "Task",
      "Resource": "${AttachBuilderSecurityGroupFunctionArn}",
      "Comment": "Calls function to attach required security group for WinRM to WorkSpace ENI.",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ]
        }
      ],
      "Next": "Configure Workspace with Ansible"
    },
    "Configure Workspace with Ansible": {
      "Type": "Task",
      "Resource": "arn:aws:states:::codebuild:startBuild",
      "Parameters": {
        "ProjectName": "${AnsibleCodeBuildProjectName}"
      },
      "Next": "Get Configured Workspace State"
    },
    "Get Configured Workspace State": {
      "Type": "Task",
      "Parameters": {
        "WorkspaceIds.$": "States.Array($.AutomationParameters.ImageBuilderWorkSpaceId)"
      },
      "Resource": "arn:aws:states:::aws-sdk:workspaces:describeWorkspaces",
      "ResultPath": "$.ImageBuilderStatus",
      "Next": "Is Configured Workspace Available?"
    },
    "Is Configured Workspace Available?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ImageBuilderStatus.Workspaces[0].State",
          "StringEquals": "AVAILABLE",
          "Next": "Create Workspaces Image",
          "Comment": "AVAILABLE"
        },
        {
          "Variable": "$.ImageBuilderStatus.Workspaces[0].State",
          "StringEquals": "ERROR",
          "Comment": "ERROR",
          "Next": "Failed to Configure Workspace"
        }
      ],
      "Default": "Wait 1 Min"
    },
    "Wait 1 Min": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "Get Configured Workspace State"
    },
    "Failed to Configure Workspace": {
      "Type": "Fail"
    },
    "Create Workspaces Image": {
      "Type": "Task",
      "Parameters": {
        "Description.$": "$.ImageDetail.ImageDescription",
        "Name.$": "$.AutomationParameters.ImageName",
        "WorkspaceId.$": "$.AutomationParameters.ImageBuilderWorkSpaceId",
        "Tags.$": "$.AutomationParameters.ImageTags"
      },
      "Resource": "arn:aws:states:::aws-sdk:workspaces:createWorkspaceImage",
      "Next": "Check Image Status",
      "ResultPath": "$.ImageStatus"
    },
    "Check Image Status": {
      "Type": "Task",
      "Next": "Is Image Available?",
      "Parameters": {
        "ImageIds.$": "States.Array($.ImageStatus.ImageId)"
      },
      "Resource": "arn:aws:states:::aws-sdk:workspaces:describeWorkspaceImages",
      "ResultPath": "$.ImageStatus"
    },
    "Is Image Available?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ImageStatus.Images[0].State",
          "StringEquals": "AVAILABLE",
          "Next": "Create Workspace Bundle",
          "Comment": "AVAILABLE"
        },
        {
          "Variable": "$.ImageStatus.Images[0].State",
          "StringEquals": "ERROR",
          "Comment": "ERROR",
          "Next": "Failed to Create Custom Image"
        }
      ],
      "Default": "Wait 10 Min",
      "Comment": "If the image is AVAILABLE, check if WorkSpace needs to be retained or not. If the image state is ERROR, then proceed to send notification. Otherwise, loop and wait."
    },
    "Failed to Create Custom Image": {
      "Type": "Fail"
    },
    "Create Workspace Bundle": {
      "Type": "Task",
      "Parameters": {
        "BundleDescription.$": "$.AutomationParameters.BundleDescription",
        "BundleName.$": "$.AutomationParameters.BundleName",
        "ComputeType.$": "$.AutomationParameters.BundleComputeType",
        "ImageId.$": "$.ImageStatus.Images[0].ImageId",
        "RootStorage.$": "$.AutomationParameters.BundleRootVolumeSize",
        "UserStorage.$": "$.AutomationParameters.BundleUserVolumeSize",
        "Tags.$": "$.AutomationParameters.BundleTags"
      },
      "Resource": "arn:aws:states:::aws-sdk:workspaces:createWorkspaceBundle",
      "ResultPath": "$.BundleStatus",
      "Next": "Cleanup Workspace Builder"
    },
    "Cleanup Workspace Builder": {
      "Type": "Task",
      "Resource": "${WorkspaceBuilderCleanupFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ]
        }
      ],
      "End": true
    },
    "Wait 3 Min": {
      "Type": "Wait",
      "Seconds": 180,
      "Next": "Get Workspaces Builder State"
    },
    "Wait 10 Min": {
      "Type": "Wait",
      "Seconds": 600,
      "Next": "Check Image Status"
    }
  }
}
